cscope 15 $HOME/source/panda               0000016242
	@include/asm.h

9 #i‡!
deföed
(
ASM_H
)

10 
	#ASM_H


	)

13 
	#ENABLE_NMI
 0x00

	)

14 
	#DISABLE_NMI
 0x80

	)

16 
öw
 (
_p‹t
);

17 
öb
 (
_p‹t
);

19 
ölöe
 
outb
 (
_p‹t
, 
_d©a
);

20 
ölöe
 
wrôe_nmi
(
nmi
);

21 
ölöe
 
íabÀ_nmi
();

22 
ölöe
 
dißbÀ_nmi
();

24 
	#loˇl_úq_dißbÀ
(Ë(
	`«tive_úq_dißbÀ
())

	)

25 
	#loˇl_úq_íabÀ
(Ë(
	`«tive_úq_íabÀ
())

	)

26 
	#ß„_hÆt
(Ë(
	`«tive_ß„_hÆt
())

	)

29 
ölöe
 
	$«tive_úq_ßve
()

31 
Êags
;

38 
asm
 volatile("# __raw_save_flags\n\t"

40 : "Ùm" (
Êags
)

44  
Êags
;

45 
	}
}

47 
ölöe
 
	$«tive_úq_ª°‹e
(
Êags
)

49 
asm
 volatile("push %0 ;Öopf"

51 :"g" (
Êags
)

53 
	}
}

55 
ölöe
 
	$«tive_úq_dißbÀ
()

57 
asm
 volatile("cli": : :"memory");

58 
	}
}

60 
ölöe
 
	$«tive_úq_íabÀ
()

62 
asm
 volatile("sti": : :"memory");

63 
	}
}

65 
ölöe
 
	$«tive_ß„_hÆt
()

67 
asm
 volatile("sti; hlt": : :"memory");

68 
	}
}

70 
ölöe
 
	$«tive_hÆt
()

72 
asm
 volatile("hlt": : :"memory");

73 
	}
}

80 
	#ty≥check
(
ty≥
,
x
) \

81 ({ 
ty≥
 
__dummy
; \

82 
	`ty≥of
(
x
Ë
__dummy2
; \

83 ()(&
__dummy
 =&
__dummy2
); \

85 })

	)

88 
	#loˇl_úq_ßve
(
Êags
) \

89 dÿ{ 
	`ty≥check
(, 
Êags
); \

90 
Êags
 = 
	`«tive_úq_ßve
(); \

92 

	)

93 
	#loˇl_úq_ª°‹e
(
Êags
) \

94 dÿ{ 
	`ty≥check
(, 
Êags
); \

95 
Êags
 = 
	`«tive_úq_ª°‹e
(); \

97 

	)

	@include/kb.h

9 #i‡!
deföed
(
KD_H
)

10 
	#KD_H


	)

17 
	gkbdus
[128] =

	@include/screen.h

9 #i‡!
deföed
(
SCREEN_H
)

10 
	#SCREEN_H


	)

12 
	~<sy°em.h
>

14 
öô_video
();

15 
putch
(
c
);

16 
puts
(c⁄° * 
ãxt
);

17 
¥ötk
(c⁄° * 
ãxt
);

18 
¥ötk_hex
(
u32
 
vÆ
);

19 
¥ötk_öt
(
u32
 
vÆ
);

20 * 
mem£t
(* 
addr
, 
v
, 
size_t
 
˙t
);

21 * 
mem˝y
(*
de°
, c⁄° *
§c
, 
size_t
 
˙t
);

22 * 
memmove
(* 
de°
, c⁄° * 
§c
, 
size_t
 
˙t
);

25 
gdt_öô
();

26 
idt_öô
();

27 
kb_öô
();

	@include/system.h

9 #i‡!
deföed
(
SYSTEM_H
)

10 
	#SYSTEM_H


	)

13 
	tsize_t
;

14 
	tu64
;

15 sig√d 
	ts64
;

16 
	tu32
;

17 sig√d 
	ts32
;

18 
	tu16
;

19 sig√d 
	ts16
;

20 
	tu8
;

21 sig√d 
	ts8
;

25 
	sªgi°îs_t


27 
	mgs
, 
	mfs
, 
	mes
, 
	mds
;

28 
	medi
, 
	mesi
, 
	mebp
, 
	me•
, 
	mebx
, 
	medx
, 
	mecx
, 
	móx
;

29 
	möt_no
, 
	mîr_code
;

30 
	meù
, 
	mcs
, 
	meÊags
, 
	mu£ª•
, 
	mss
;

33 (*
	tisq_t
Ë(
	tªgi°îs_t
* 
	tr
);

35 
	`úq_ö°Æl_h™dÀr
(
úq
, 
isq_t
 
h™dÀr
);

36 
	`idt_£t
(
k
, 
ba£
,

37 
£À˘‹
, 
Êags
);

39 
	`timî_öô
(
u32
 
‰equícy
);

40 
	`timî_waô
(
ticks
);

	@kernel/asm.c

9 
	~<asm.h
>

11 
	#ö
(
p‹t
) ({ \

12 
v
; \

13 
__asm__
 
	`__vﬁ©ûe__
 ("inb %%dx, %%al" \

14 : "˜" (
v
Ë: "d" (
p‹t
)); \

15 
v
; \

16 })

	)

18 
	#out
(
p‹t
, 
vÆue
) \

19 
__asm__
 
	`__vﬁ©ûe__
 ("outb %%Æ, %%dx" :: "a" (
vÆue
), \

20 "d" (
p‹t
)) \

21 

	)

24 
	$öw
 (
_p‹t
)

26 
rv
;

27 
__asm__
 
	`__vﬁ©ûe__
 ("öw %1, %0" : "˜" (
rv
Ë: "dN" (
_p‹t
));

28  
rv
;

29 
	}
}

31 
	$öb
 (
_p‹t
)

33 
rv
;

34 
__asm__
 
	`__vﬁ©ûe__
 ("öb %1, %0" : "˜" (
rv
Ë: "dN" (
_p‹t
));

35  
rv
;

36 
	}
}

38 
	$outb
 (
_p‹t
, 
_d©a
)

40 
__asm__
 
	`__vﬁ©ûe__
 ("outb %1, %0" : : "dN" (
_p‹t
), "a" (
_d©a
));

41 
	}
}

44 
ölöe
 
	$wrôe_nmi
(
nmi
)

46 
	`out
(0x70, 
nmi
);

47 
	`ö
(0x71);

48 
	}
}

50 
ölöe
 
	$íabÀ_nmi
()

52 
	`wrôe_nmi
(
ENABLE_NMI
);

53 
	}
}

55 
ölöe
 
	$dißbÀ_nmi
()

57 
	`wrôe_nmi
(
DISABLE_NMI
);

58 
	}
}

	@kernel/gdt.c

9 
	~<sy°em.h
>

14 
	sgdt_íåy


16 
	mlimô
;

17 
	mba£_low
;

18 
	mba£_middÀ
;

19 
	mac˚ss
;

20 
	mgønuœrôy
;

21 
	mba£_high
;

22 } 
__©åibuã__
((
∑cked
));

24 
	sgdt_±r


26 
	mlimô
;

27 
	mba£
;

28 } 
__©åibuã__
((
∑cked
));

30 
gdt_íåy
 
	ggdt
[3];

31 
gdt_±r
 
	ggp
;

33 
gdt_Êush
();

37 
	$gdt_£t_íåy
(
num
, 
ba£
, 
limô
,

38 
ac˚ss
, 
gøn
)

41 
gdt
[
num
].
ba£_low
 = (
ba£
 & 0xFFFF);

42 
gdt
[
num
].
ba£_middÀ
 = (
ba£
 >> 16) & 0xFF;

43 
gdt
[
num
].
ba£_high
 = (
ba£
 >> 24) & 0xFF;

46 
gdt
[
num
].
limô
 = (limit & 0xFFFF);

47 
gdt
[
num
].
gønuœrôy
 = ((
limô
 >> 16) & 0x0F);

50 
gdt
[
num
].
gønuœrôy
 |(
gøn
 & 0xF0);

51 
gdt
[
num
].
ac˚ss
 =áccess;

52 
	}
}

54 
	$gdt_öô
()

57 
gp
.
limô
 = ((
gdt_íåy
) * 3) - 1;

58 
gp
.
ba£
 = ()&
gdt
;

61 
	`gdt_£t_íåy
(0, 0, 0, 0, 0);

67 
	`gdt_£t_íåy
(1, 0, 0xFFFFFFFF, 0x9A, 0xCF);

72 
	`gdt_£t_íåy
(2, 0, 0xFFFFFFFF, 0x92, 0xCF);

76 
	`gdt_Êush
();

77 
	}
}

	@kernel/idt.c

9 
	~<sy°em.h
>

10 
	~<s¸ìn.h
>

11 
	~<asm.h
>

39 
	sidt_íåy


41 
	mba£_lo
;

42 
	m£À˘‹
;

43 
	mzîo
;

44 
	mÊags
;

45 
	mba£_hi
;

46 } 
__©åibuã__
((
∑cked
));

48 
	sidt_±r


50 
	mlimô
;

51 
	mba£
;

52 } 
__©åibuã__
((
∑cked
));

55 
idt_íåy
 
	gidt
[256];

56 
idt_±r
 
	gidç
;

59 
idt_lﬂd
();

62 
i§0
 ();

63 
i§1
 ();

64 
i§2
 ();

65 
i§3
 ();

66 
i§4
 ();

67 
i§5
 ();

68 
i§6
 ();

69 
i§7
 ();

70 
i§8
 ();

71 
i§9
 ();

72 
i§10
();

73 
i§11
();

74 
i§12
();

75 
i§13
();

76 
i§14
();

77 
i§15
();

78 
i§16
();

79 
i§17
();

80 
i§18
();

81 
i§19
();

82 
i§20
();

83 
i§21
();

84 
i§22
();

85 
i§23
();

86 
i§24
();

87 
i§25
();

88 
i§26
();

89 
i§27
();

90 
i§28
();

91 
i§29
();

92 
i§30
();

93 
i§31
();

94 
úq0
 ();

95 
úq1
 ();

96 
úq2
 ();

97 
úq3
 ();

98 
úq4
 ();

99 
úq5
 ();

100 
úq6
 ();

101 
úq7
 ();

102 
úq8
 ();

103 
úq9
 ();

104 
úq10
();

105 
úq11
();

106 
úq12
();

107 
úq13
();

108 
úq14
();

109 
úq15
();

113 c⁄° * 
	gex˚±i⁄_mesßges
[32] =

153 
	$idt_£t
(
k
, 
ba£
,

154 
£À˘‹
, 
Êags
)

157 
idt
[
k
].
ba£_lo
 = (
ba£
 & 0xFFFF);

158 
idt
[
k
].
ba£_hi
 = (
ba£
 >> 16) & 0xFFFF;

162 
idt
[
k
].
£À˘‹
 = selector;

163 
idt
[
k
].
zîo
 = 0;

164 
idt
[
k
].
Êags
 = flags;

165 
	}
}

167 
isq_t
 
úq_routöes
[];

170 
	$idt_öô
()

173 
idç
.
limô
 = ( (
idt_íåy
) * 256) - 1;

174 
idç
.
ba£
 = (
u32
)&
idt
;

177 
	`mem£t
(&
idt
, 0, (
idt_íåy
) * 256);

181 
	`outb
(0x20, 0x11);

182 
	`outb
(0xA0, 0x11);

183 
	`outb
(0x21, 0x20);

184 
	`outb
(0xA1, 0x28);

185 
	`outb
(0x21, 0x04);

186 
	`outb
(0xA1, 0x02);

187 
	`outb
(0x21, 0x01);

188 
	`outb
(0xA1, 0x01);

189 
	`outb
(0x21, 0x0);

190 
	`outb
(0xA1, 0x0);

196 
	`idt_£t
–0, (
u32
)
i§0
 , 0x08, 0x8E);

197 
	`idt_£t
–1, (
u32
)
i§1
 , 0x08, 0x8E);

198 
	`idt_£t
–2, (
u32
)
i§2
 , 0x08, 0x8E);

199 
	`idt_£t
–3, (
u32
)
i§3
 , 0x08, 0x8E);

200 
	`idt_£t
–4, (
u32
)
i§4
 , 0x08, 0x8E);

201 
	`idt_£t
–5, (
u32
)
i§5
 , 0x08, 0x8E);

202 
	`idt_£t
–6, (
u32
)
i§6
 , 0x08, 0x8E);

203 
	`idt_£t
–7, (
u32
)
i§7
 , 0x08, 0x8E);

204 
	`idt_£t
–8, (
u32
)
i§8
 , 0x08, 0x8E);

205 
	`idt_£t
–9, (
u32
)
i§9
 , 0x08, 0x8E);

206 
	`idt_£t
(10, (
u32
)
i§10
, 0x08, 0x8E);

207 
	`idt_£t
(11, (
u32
)
i§11
, 0x08, 0x8E);

208 
	`idt_£t
(12, (
u32
)
i§12
, 0x08, 0x8E);

209 
	`idt_£t
(13, (
u32
)
i§13
, 0x08, 0x8E);

210 
	`idt_£t
(14, (
u32
)
i§14
, 0x08, 0x8E);

211 
	`idt_£t
(15, (
u32
)
i§15
, 0x08, 0x8E);

212 
	`idt_£t
(16, (
u32
)
i§16
, 0x08, 0x8E);

213 
	`idt_£t
(17, (
u32
)
i§17
, 0x08, 0x8E);

214 
	`idt_£t
(18, (
u32
)
i§18
, 0x08, 0x8E);

215 
	`idt_£t
(19, (
u32
)
i§19
, 0x08, 0x8E);

216 
	`idt_£t
(20, (
u32
)
i§20
, 0x08, 0x8E);

217 
	`idt_£t
(21, (
u32
)
i§21
, 0x08, 0x8E);

218 
	`idt_£t
(22, (
u32
)
i§22
, 0x08, 0x8E);

219 
	`idt_£t
(23, (
u32
)
i§23
, 0x08, 0x8E);

220 
	`idt_£t
(24, (
u32
)
i§24
, 0x08, 0x8E);

221 
	`idt_£t
(25, (
u32
)
i§25
, 0x08, 0x8E);

222 
	`idt_£t
(26, (
u32
)
i§26
, 0x08, 0x8E);

223 
	`idt_£t
(27, (
u32
)
i§27
, 0x08, 0x8E);

224 
	`idt_£t
(28, (
u32
)
i§28
, 0x08, 0x8E);

225 
	`idt_£t
(29, (
u32
)
i§29
, 0x08, 0x8E);

226 
	`idt_£t
(30, (
u32
)
i§30
, 0x08, 0x8E);

227 
	`idt_£t
(31, (
u32
)
i§31
, 0x08, 0x8E);

229 
	`idt_£t
(32, (
u32
)
úq0
, 0x08, 0x8E);

230 
	`idt_£t
(33, (
u32
)
úq1
, 0x08, 0x8E);

231 
	`idt_£t
(34, (
u32
)
úq2
, 0x08, 0x8E);

232 
	`idt_£t
(35, (
u32
)
úq3
, 0x08, 0x8E);

233 
	`idt_£t
(36, (
u32
)
úq4
, 0x08, 0x8E);

234 
	`idt_£t
(37, (
u32
)
úq5
, 0x08, 0x8E);

235 
	`idt_£t
(38, (
u32
)
úq6
, 0x08, 0x8E);

236 
	`idt_£t
(39, (
u32
)
úq7
, 0x08, 0x8E);

238 
	`idt_£t
(40, (
u32
)
úq8
, 0x08, 0x8E);

239 
	`idt_£t
(41, (
u32
)
úq9
, 0x08, 0x8E);

240 
	`idt_£t
(42, (
u32
)
úq10
, 0x08, 0x8E);

241 
	`idt_£t
(43, (
u32
)
úq11
, 0x08, 0x8E);

242 
	`idt_£t
(44, (
u32
)
úq12
, 0x08, 0x8E);

243 
	`idt_£t
(45, (
u32
)
úq13
, 0x08, 0x8E);

244 
	`idt_£t
(46, (
u32
)
úq14
, 0x08, 0x8E);

245 
	`idt_£t
(47, (
u32
)
úq15
, 0x08, 0x8E);

248 
asm
 volatile(

250 :: "m"(
idç
));

252 
	`mem£t
(&
úq_routöes
 , 0, (
isq_t
)*256);

253 
	}
}

256 
	$i§_h™dÀr
(
ªgi°îs_t
* 
ªgs
)

258 
	`puts
("recieved interrupt: ");

259 
	`¥ötk_hex
(
ªgs
->
öt_no
);

260 
	`puts
("\n");

263 i‡(
ªgs
->
öt_no
 < 32)

265 
	`puts
(
ex˚±i⁄_mesßges
[
ªgs
->
öt_no
]);

266 
	`puts
("\n");

269 
	}
}

	@kernel/irq.c

10 
	~<sy°em.h
>

11 
	~<asm.h
>

12 
	~<s¸ìn.h
>

14 
úq0
();

15 
úq1
();

16 
úq2
();

17 
úq3
();

18 
úq4
();

19 
úq5
();

20 
úq6
();

21 
úq7
();

22 
úq8
();

23 
úq9
();

24 
úq10
();

25 
úq11
();

26 
úq12
();

27 
úq13
();

28 
úq14
();

29 
úq15
();

34 
isq_t
 
	gúq_routöes
[256];

37 
	$úq_ö°Æl_h™dÀr
(
úq
, 
isq_t
 
h™dÀr
)

39 
	`¥ötk
("now irq_install_handler\n");

40 
úq_routöes
[
úq
] = 
h™dÀr
;

41 
	}
}

44 
	$úq_unö°Æl_h™dÀr
(
úq
)

46 
úq_routöes
[
úq
] = 0;

47 
	}
}

57 
	$úq_ªm≠
()

59 
	`outb
(0x20, 0x11);

60 
	`outb
(0xA0, 0x11);

61 
	`outb
(0x21, 0x20);

62 
	`outb
(0xA1, 0x28);

63 
	`outb
(0x21, 0x04);

64 
	`outb
(0xA1, 0x02);

65 
	`outb
(0x21, 0x01);

66 
	`outb
(0xA1, 0x01);

67 
	`outb
(0x21, 0x0);

68 
	`outb
(0xA1, 0x0);

69 
	}
}

81 
	$úq_h™dÀr
(
ªgi°îs_t
* 
r
)

85 
isq_t
 
h™dÀr
 = 0;

88 
h™dÀr
 = 
úq_routöes
[
r
->
öt_no
];

89 i‡(
h™dÀr
)

91 
	`h™dÀr
(
r
);

97 i‡(
r
->
öt_no
 >= 40)

99 
	`outb
(0xA0, 0x20);

104 
	`outb
(0x20, 0x20);

105 
	}
}

	@kernel/kb.c

9 
	~<kb.h
>

10 
	~<sy°em.h
>

13 
	$keybﬂrd_h™dÀr
(
ªgi°îs_t
* 
ªgs
)

15 
sˇncode
;

18 
sˇncode
 = 
	`öb
(0x60);

22 i‡(
sˇncode
 & 0x80)

41 
	`putch
(
kbdus
[
sˇncode
]);

43 
	}
}

45 
	$kb_öô
()

47 
	`úq_ö°Æl_h™dÀr
(33, &
keybﬂrd_h™dÀr
);

48 
	}
}

	@kernel/main.c

9 
	~<asm.h
>

10 
	~<s¸ìn.h
>

12 
	$kmaö
()

14 
	`öô_video
();

15 
	`puts
("booting Panda OS ...\n");

16 
	`puts
("gdt_init ...\n");

17 
	`gdt_öô
();

18 
	`puts
("idt_init ...\n");

19 
	`idt_öô
();

20 
	`puts
("timer init ...\n");

21 
asm
 volatile ("int $0x3");

22 
asm
 volatile ("int $0x4");

23 
asm
 volatile("sti");

24 
	`timî_öô
(1);

25 
	`puts
("kb init...\n");

26 
	`kb_öô
();

28 
öôül
 = 1;

31 if(
öôül
) {

32 
	`puts
("running\n");

33 
öôül
 = 0;

36 
	`ß„_hÆt
();

37 
	}
}

	@kernel/screen.c

13 
	~<sy°em.h
>

17 *
	gãxtmem±r
;

18 
	g©åib
 = 0x0F;

19 
	gc§_x
 = 10, 
	gc§_y
 = 0;

22 *
	$mem˝y
(*
de°
, c⁄° *
§c
, 
size_t
 
˙t
)

24 c⁄° *
•
 = (c⁄° *)
§c
;

25 *
dp
 = (*)
de°
;

26 
˙t
--){

27 *
dp
++ = *
•
++;

29  
de°
;

30 
	}
}

33 * 
	$mem£t
(* 
addr
, 
v
, 
size_t
 
˙t
)

35 * 
t
 = (*)
addr
;

36 
˙t
--){

37 *
t
++ = 
v
;

39  
addr
;

40 
	}
}

42 * 
	$memmove
(* 
de°
, c⁄° * 
§c
, 
size_t
 
˙t
)

44 * 
ªt
 = 
de°
;

45 * 
d
 = (*)
de°
;

46 c⁄° * 
s
 = 
§c
;

47 if–
d
<=
s
 || d>=(s+
˙t
)) {

48 
˙t
--){

49 *
d
++ = *
s
++;

53 
d
 +(
˙t
+1);

54 
s
 +(
˙t
+1);

55 
˙t
--){

56 *
d
-- = *
s
--;

59  
ªt
;

60 
	}
}

62 *
	$mem£tw
(*
de°
, 
vÆ
, 
size_t
 
cou¡
)

64 *
ãmp
 = (*)
de°
;

65  ; 
cou¡
 !0; cou¡--Ë*
ãmp
++ = 
vÆ
;

66  
de°
;

67 
	}
}

69 
size_t
 
	$°æí
(c⁄° *
°r
)

71 
size_t
 
ªtvÆ
;

72 
ªtvÆ
 = 0; *
°r
 != '\0'; str++)

73 
ªtvÆ
++;

74  
ªtvÆ
;

75 
	}
}

77 
	$öp‹tb
 (
_p‹t
)

79 
rv
;

80 
__asm__
 
	`__vﬁ©ûe__
 ("öb %1, %0" : "˜" (
rv
Ë: "dN" (
_p‹t
));

81  
rv
;

82 
	}
}

84 
	$ouç‹tb
 (
_p‹t
, 
_d©a
)

86 
__asm__
 
	`__vﬁ©ûe__
 ("outb %1, %0" : : "dN" (
_p‹t
), "a" (
_d©a
));

87 
	}
}

91 
	$s¸ﬁl
()

93 
bœnk
, 
ãmp
;

97 
bœnk
 = 0x20 | (
©åib
 << 8);

100 if(
c§_y
 >= 25)

104 
ãmp
 = 
c§_y
 - 25 + 1;

105 
	`mem˝y
 (
ãxtmem±r
,Åextmem±∏+ 
ãmp
 * 80, (25 -Åemp) * 80 * 2);

109 
	`mem£tw
 (
ãxtmem±r
 + (25 - 
ãmp
Ë* 80, 
bœnk
, 80);

110 
c§_y
 = 25 - 1;

112 
	}
}

116 
	$move_c§
()

118 
ãmp
;

123 
ãmp
 = 
c§_y
 * 80 + 
c§_x
;

132 
	`ouç‹tb
(0x3D4, 14);

133 
	`ouç‹tb
(0x3D5, 
ãmp
 >> 8);

134 
	`ouç‹tb
(0x3D4, 15);

135 
	`ouç‹tb
(0x3D5, 
ãmp
);

136 
	}
}

139 
	$˛s
()

141 
bœnk
;

142 
i
;

146 
bœnk
 = 0x20 | (
©åib
 << 8);

150 
i
 = 0; i < 25; i++)

151 
	`mem£tw
 (
ãxtmem±r
 + 
i
 * 80, 
bœnk
, 80);

155 
c§_x
 = 0;

156 
c§_y
 = 0;

157 
	`move_c§
();

158 
	}
}

161 
	$putch
(
c
)

163 *
whîe
;

164 
©t
 = 
©åib
 << 8;

167 if(
c
 == 0x08)

169 if(
c§_x
 != 0) csr_x--;

173 if(
c
 == 0x09)

175 
c§_x
 = (csr_x + 8) & ~(8 - 1);

179 if(
c
 == '\r')

181 
c§_x
 = 0;

186 if(
c
 == '\n')

188 
c§_x
 = 0;

189 
c§_y
++;

195 if(
c
 >= ' ')

197 
whîe
 = 
ãxtmem±r
 + (
c§_y
 * 80 + 
c§_x
);

198 *
whîe
 = 
c
 | 
©t
;

199 
c§_x
++;

204 if(
c§_x
 >= 80)

206 
c§_x
 = 0;

207 
c§_y
++;

211 
	`s¸ﬁl
();

212 
	`move_c§
();

213 
	}
}

216 
ölöe
 
	$puts
(c⁄° * 
ãxt
)

218 
i
;

220 
i
 = 0; i < 
	`°æí
(
ãxt
); i++)

222 
	`putch
(
ãxt
[
i
]);

224 
	}
}

226 
ölöe
 
	$¥ötk
(c⁄° * 
ãxt
)

228 
	`puts
(
ãxt
);

229 
	}
}

231 
ölöe
 
	$¥ötk_hex
(
u32
 
vÆ
)

233 
öôül
 = 1;

234 
k
;

235 
u32
 
t
;

236 
	`puts
("0x");

237 
k
=28; k>0; k-=4){

238 
t
 = (
vÆ
>>
k
) & 0xF;

239 if–
t
==0 && 
öôül
 )

241 
öôül
 = 0;

242 if–
t
 >0xA ) 
	`putch
(Å-0xA+'A');

243 
	`putch
–
t
+'0');

245 
t
 = 
vÆ
 & 0xF;

246 if–
t
 >0xA ) 
	`putch
(Å-0xA+'A');

247 
	`putch
–
t
+'0');

248 
	}
}

250 
ölöe
 
	$¥ötk_öt
(
u32
 
vÆ
)

252 
buf
[12];

253 
˙t
 = 0;

254 
vÆ
>0) {

255 
buf
[
˙t
++] = '0' + 
vÆ
%10;

256 
vÆ
 /= 10;

258 if(
˙t
 == 0)

259 
	`putch
('0');

261 
˙t
){

262 
	`putch
(
buf
[--
˙t
]);

267 if(
vÆ
 <= 9 && val >= 0){

268 
	`putch
('0' + 
vÆ
);

271 
t
 = 1;

272 
t
<
vÆ
)

273 
t
 =Å * 10;

274 
t
 /= 10;

275 
t
) {

276 if–
vÆ
 <= 9 && val >= 0){

277 
	`putch
('0' + 
vÆ
);

280 
	`putch
–
vÆ
/
t
 + '0');

281 
vÆ
 = vÆ % 
t
;

282 
t
 /= 10;

286 
	}
}

289 
	$£âextcﬁ‹
(
f‹ecﬁ‹
, 
backcﬁ‹
)

293 
©åib
 = (
backcﬁ‹
 << 4Ë| (
f‹ecﬁ‹
 & 0x0F);

294 
	}
}

297 
	$öô_video
()

299 
ãxtmem±r
 = (*)0xB8000;

300 
	`˛s
();

301 
	}
}

	@kernel/timer.c

9 
	~<sy°em.h
>

10 
	~<s¸ìn.h
>

11 
	~<asm.h
>

16 
	gtimî_ticks
 = 0;

23 
	$timî_h™dÀr
(
ªgi°îs_t
* 
ªgs
)

26 
timî_ticks
++;

30 i‡(
timî_ticks
 % 18 == 0)

32 
	`puts
("One second hasÖassed\n");

34 
	}
}

38 
	$timî_waô
(
ticks
)

40 
ëicks
;

42 
ëicks
 = 
timî_ticks
 + 
ticks
;

43 
timî_ticks
 < 
ëicks
);

44 
	}
}

48 
	$timî_ö°Æl
()

51 
	`úq_ö°Æl_h™dÀr
(0, 
timî_h™dÀr
);

52 
	}
}

56 
u32
 
	gticks
 = 0;

57 
u32
 
	g£c⁄ds
 = 0;

58 
	$timî_ˇŒback
(
ªgi°îs_t
* 
ªgs
)

60 
ticks
++;

63 i‡(
ticks
 % 70 == 0)

68 
£c⁄ds
++;

71 
	}
}

73 
	$timî_öô
(
u32
 
‰equícy
)

76 
	`úq_ö°Æl_h™dÀr
(32, &
timî_ˇŒback
);

82 
u32
 
divis‹
 = 1193180 ;

85 
	`outb
(0x43, 0x36);

88 
u8
 
l
 = (u8)(
divis‹
 & 0xFF);

89 
u8
 
h
 = (u8)((
divis‹
>>8) & 0xFF );

92 
	`outb
(0x40, 
l
);

93 
	`outb
(0x40, 
h
);

94 
	}
}

99 
	$timî_waô
(
waô
)

101 
ëicks
;

103 
ëicks
 = 
ticks
 + 
waô
;

104 
ticks
 < 
ëicks
);

105 
	}
}

	@system.h

9 #i‡!
deföed
(
SYSTEM_H
)

10 
	#SYSTEM_H


	)

13 
	tsize_t
;

14 
	tu64
;

15 sig√d 
	ts64
;

16 
	tu32
;

17 sig√d 
	ts32
;

18 
	tu16
;

19 sig√d 
	ts16
;

20 
	tu8
;

21 sig√d 
	ts8
;

25 
	sªgi°îs_t


27 
	mgs
, 
	mfs
, 
	mes
, 
	mds
;

28 
	medi
, 
	mesi
, 
	mebp
, 
	me•
, 
	mebx
, 
	medx
, 
	mecx
, 
	móx
;

29 
	möt_no
, 
	mîr_code
;

30 
	meù
, 
	mcs
, 
	meÊags
, 
	mu£ª•
, 
	mss
;

33 (*
	tisq_t
Ë(
	tªgi°îs_t
* 
	tr
);

35 
	`úq_ö°Æl_h™dÀr
(
úq
, 
isq_t
 
h™dÀr
);

36 
	`idt_£t
(
k
, 
ba£
,

37 
£À˘‹
, 
Êags
);

39 
	`timî_öô
(
u32
 
‰equícy
);

40 
	`timî_waô
(
ticks
);

	@
1
.
1
/usr/include
13
179
include/asm.h
include/kb.h
include/screen.h
include/system.h
kernel/asm.c
kernel/gdt.c
kernel/idt.c
kernel/irq.c
kernel/kb.c
kernel/main.c
kernel/screen.c
kernel/timer.c
system.h
